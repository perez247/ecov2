version: "3.4"

services:

  postgres_image:
    image: postgres:11.5-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "root_user"
      POSTGRES_PASSWORD: "root_password"
      POSTGRES_DB: "app_db"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    volumes:
      - ./backend:/app
      - /app/Api/bin/
      - /app/Application/bin/
      - /app/Domain/bin/
      - /app/Infrastructure/bin/
      - /app/Persistence/bin/
      - /app/Api/obj/
      - /app/Application/obj/
      - /app/Domain/obj/
      - /app/Infrastructure/obj/
      - /app/Persistence/obj/
      - ./log/emailmessage.txt:/app/emailmessage.txt
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DefaultConnection=host=postgres_image;port=5432;database=app_db;username=root_user;password=root_password
      - SENDGRID_APIKEY=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
    depends_on:
      - postgres_image
    ports:
      - "5000:5000"
  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "4200:4200"
    
  nginx:
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - "80:80"
  
  # nginx_template:
  #   restart: always
  #   image: newecopeoplev1/nginx_template_dev
  #   ports:
  #     - "4000:4000"

  template:
    image: newecopeoplev1/template_dev
    ports:
      - "4000:4201"
